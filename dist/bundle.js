(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{LOG_LEVELS:()=>n,createLogger:()=>g});const r=(e,t)=>{const r=Object.entries(e).map((([e,r])=>t(e,r)));return Object.fromEntries(r)},n={critical:0,error:1,warn:2,info:3,debug:4},a={enabled:!0,level:"info",formatLogSegments:e=>e.join(" "),prefix:{includeLevelName:!0,includeTime:!0,getCurrentTimeString:()=>(new Date).toLocaleTimeString("en-US",{hour12:!1}),getRestOfPrefix:()=>[],format:e=>`[${e.join(" ")}]`,colors:{critical:"red",error:"orange",warn:"yellow",info:"skyblue",debug:"green"}},sink:{endpoint:null,func:({message:{asSegments:e,asString:t},metadata:r})=>{console.log(...e)}},metadata:()=>({clientTimestamp:Date.now()}),replaceParentConfig:!1,replaceParentMetadata:!1,filter:({message:{asSegments:e,asString:t},metadata:r})=>!0},o=e=>!Array.isArray(e)&&"object"==typeof e&&null!==e,i=e=>{return t=Object.keys(e),r=t=>o(e[t])?{[t]:!0,...i(e[t])}:{[t]:!0},t.reduce(((e,t)=>({...e,...r(t)})),{});var t,r},s=i(a),l=e=>o(e)&&Object.keys(e).every((e=>s.hasOwnProperty(e))),c=(e,t)=>t.replaceParentConfig?t:t.replaceParentMetadata?c({...e,metadata:null},t):r(e,((r,n)=>l(e[r])&&l(t[r])?[r,c(e[r],t[r])]:[r,t.hasOwnProperty(r)?t[r]:n])),f=(e,t)=>{if(!t.prefix)return[];const r=[t.prefix.includeLevelName&&e,t.prefix.includeTime&&t.prefix.getCurrentTimeString(),...t.prefix.getRestOfPrefix()],n=(t.prefix.colors?"%c":"")+t.prefix.format(r),a=t.prefix.colors?`color: ${t.prefix.colors[e]};`:"";return a?[n,a]:[n]},g=(e=a)=>{const t=c(a,e);return{...r(n,((e,r)=>{return[e,(a=e,o=r,(...e)=>{const r=l(e[0]),i=r?c(t,e[0]):t,s=r?e.slice(1):e;if(!i.enabled||o>("number"==typeof(g=i.level)?g:n[g]))return;var g;const m="function"==typeof(d=i.metadata)?d():d;var d;const p=[...f(a,i),...s].filter((e=>e)),u=i.formatLogSegments(p);i.filter({message:{asString:u,asSegments:p},metadata:m})&&(i.sink.func&&i.sink.func({message:{asString:u,asSegments:p},metadata:m}),i.sink.endpoint&&(async(e="",t={})=>{(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},keepalive:!0,body:JSON.stringify(t)})).json()})(i.sink.endpoint,{message:{asString:u,asSegments:p},metadata:m}))})];var a,o})),createSubLogger:e=>g(...c(t,e))}}})();